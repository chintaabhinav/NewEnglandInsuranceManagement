/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.IT_Support;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Properties;
import javax.swing.JPanel;
import javax.mail.Message;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import java.util.Properties;
import Model.DatabaseConnection.DatabaseConnection;
import java.awt.CardLayout;
import javax.mail.*;
import javax.mail.internet.*;

/**
 *
 * @author ABHINAVCHINTA
 */
public class IT_Support_Dashboard extends javax.swing.JPanel {

    /**
     * Creates new form IT_Support_Dashboard
     */
    JPanel workPanel;

    public IT_Support_Dashboard(JPanel workPanel) {
        initComponents();
        this.workPanel = workPanel; // Initialize the workPanel reference
        loadTableData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblItSupport = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmailIssueStatus = new javax.swing.JTable();
        btnInProgress = new javax.swing.JButton();
        btnSolved = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 204, 255));

        lblItSupport.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblItSupport.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblItSupport.setText("IT Support Dashboard");

        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        tblEmailIssueStatus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Email", "Issue", "Status", "Name"
            }
        ));
        jScrollPane1.setViewportView(tblEmailIssueStatus);

        btnInProgress.setText("In Progress");
        btnInProgress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInProgressActionPerformed(evt);
            }
        });

        btnSolved.setText("Solved");
        btnSolved.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolvedActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/itsupport.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(btnLogout)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(338, 338, 338)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(lblItSupport, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnInProgress)
                        .addGap(4, 4, 4)
                        .addComponent(btnSolved))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 982, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(200, 200, 200))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btnLogout)
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addGap(1, 1, 1)
                .addComponent(lblItSupport, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInProgress)
                    .addComponent(btnSolved))
                .addContainerGap(18, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void loadTableData() {
        DefaultTableModel model = (DefaultTableModel) tblEmailIssueStatus.getModel();
        model.setRowCount(0); // Clear existing rows

        String query = "SELECT email, reason, stage, name FROM technical_issue";
        try (Connection conn = DatabaseConnection.getConnection(); PreparedStatement stmt = conn.prepareStatement(query); ResultSet rs = stmt.executeQuery()) {

            while (rs.next()) {
                String email = rs.getString("email");
                String reason = rs.getString("reason");
                String stage = rs.getString("stage");
                String name = rs.getString("name");
                model.addRow(new Object[]{email, reason, stage, name});
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void updateStageAndSendEmail(String stage) {
        int selectedRow = tblEmailIssueStatus.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row first.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String email = (String) tblEmailIssueStatus.getValueAt(selectedRow, 0);
        String reason = (String) tblEmailIssueStatus.getValueAt(selectedRow, 1);
        String name = (String) tblEmailIssueStatus.getValueAt(selectedRow, 3);

        String query = "UPDATE technical_issue SET stage = ? WHERE email = ?";
        try (Connection conn = DatabaseConnection.getConnection(); PreparedStatement stmt = conn.prepareStatement(query)) {

            stmt.setString(1, stage);
            stmt.setString(2, email);
            int rowsUpdated = stmt.executeUpdate();
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Stage updated successfully to " + stage + "!");
                sendEmail(email, name, reason, stage); // Send email
                loadTableData(); // Reload table data
            } else {
                JOptionPane.showMessageDialog(this, "Failed to update stage.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Send email notification
    private void sendEmail(String recipientEmail, String recipientName, String reason, String stage) {
        final String senderEmail = "rajumighty432@gmail.com"; // Replace with your email
        final String senderPassword = "bqff vybd eclw pxdf"; // Replace with your App Password

        Properties properties = new Properties();
        properties.put("mail.smtp.auth", "true");
        properties.put("mail.smtp.starttls.enable", "true");
        properties.put("mail.smtp.host", "smtp.gmail.com");
        properties.put("mail.smtp.port", "587");
        properties.put("mail.smtp.ssl.protocols", "TLSv1.2");

        Session session = Session.getInstance(properties, new javax.mail.Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(senderEmail, senderPassword);
            }
        });

        try {
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(senderEmail));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(recipientEmail));
            message.setSubject("Technical Issue Update");
            message.setText(
                    "Dear " + recipientName + ",\n\n"
                    + "Your technical issue has been updated.\n\n"
                    + "Details:\n"
                    + "Reason: " + reason + "\n"
                    + "Stage: " + stage + "\n\n"
                    + "Regards,\nIT Support Team"
            );

            Transport.send(message);
            JOptionPane.showMessageDialog(this, "Email sent to " + recipientEmail);
        } catch (MessagingException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to send email: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }


    private void btnInProgressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInProgressActionPerformed
        // TODO add your handling code here:
        updateStageAndSendEmail("In Progress");
    }//GEN-LAST:event_btnInProgressActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        workPanel.remove(this);
        CardLayout layout = (CardLayout) workPanel.getLayout();
        layout.previous(workPanel); // Navigate back to the login screen

    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnSolvedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolvedActionPerformed
        // TODO add your handling code here:
        updateStageAndSendEmail("Solved");
    }//GEN-LAST:event_btnSolvedActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInProgress;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnSolved;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblItSupport;
    private javax.swing.JTable tblEmailIssueStatus;
    // End of variables declaration//GEN-END:variables
}
